//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NeocronWorldMap.Web.NeocronSessionManagement {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BasicResult", Namespace="http://backend.neocron-game.com/")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NeocronWorldMap.Web.NeocronSessionManagement.SessionDetails))]
    public partial class BasicResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private bool RequestSucceededField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool RequestSucceeded {
            get {
                return this.RequestSucceededField;
            }
            set {
                if ((this.RequestSucceededField.Equals(value) != true)) {
                    this.RequestSucceededField = value;
                    this.RaisePropertyChanged("RequestSucceeded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SessionDetails", Namespace="http://backend.neocron-game.com/")]
    [System.SerializableAttribute()]
    public partial class SessionDetails : NeocronWorldMap.Web.NeocronSessionManagement.BasicResult {
        
        private uint IdentifierField;
        
        private System.Guid TokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        private uint TriesField;
        
        private System.DateTime LockedUntilField;
        
        private System.DateTime ValidUntilField;
        
        private bool IsLoggedInField;
        
        private bool IsGameMasterField;
        
        private uint GameMasterRankField;
        
        private uint AccountIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValidityTimeSpanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemoteEndpointField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public uint Identifier {
            get {
                return this.IdentifierField;
            }
            set {
                if ((this.IdentifierField.Equals(value) != true)) {
                    this.IdentifierField = value;
                    this.RaisePropertyChanged("Identifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Guid Token {
            get {
                return this.TokenField;
            }
            set {
                if ((this.TokenField.Equals(value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public uint Tries {
            get {
                return this.TriesField;
            }
            set {
                if ((this.TriesField.Equals(value) != true)) {
                    this.TriesField = value;
                    this.RaisePropertyChanged("Tries");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public System.DateTime LockedUntil {
            get {
                return this.LockedUntilField;
            }
            set {
                if ((this.LockedUntilField.Equals(value) != true)) {
                    this.LockedUntilField = value;
                    this.RaisePropertyChanged("LockedUntil");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public System.DateTime ValidUntil {
            get {
                return this.ValidUntilField;
            }
            set {
                if ((this.ValidUntilField.Equals(value) != true)) {
                    this.ValidUntilField = value;
                    this.RaisePropertyChanged("ValidUntil");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public bool IsLoggedIn {
            get {
                return this.IsLoggedInField;
            }
            set {
                if ((this.IsLoggedInField.Equals(value) != true)) {
                    this.IsLoggedInField = value;
                    this.RaisePropertyChanged("IsLoggedIn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=7)]
        public bool IsGameMaster {
            get {
                return this.IsGameMasterField;
            }
            set {
                if ((this.IsGameMasterField.Equals(value) != true)) {
                    this.IsGameMasterField = value;
                    this.RaisePropertyChanged("IsGameMaster");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=8)]
        public uint GameMasterRank {
            get {
                return this.GameMasterRankField;
            }
            set {
                if ((this.GameMasterRankField.Equals(value) != true)) {
                    this.GameMasterRankField = value;
                    this.RaisePropertyChanged("GameMasterRank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=9)]
        public uint AccountId {
            get {
                return this.AccountIdField;
            }
            set {
                if ((this.AccountIdField.Equals(value) != true)) {
                    this.AccountIdField = value;
                    this.RaisePropertyChanged("AccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=10)]
        public string ValidityTimeSpan {
            get {
                return this.ValidityTimeSpanField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidityTimeSpanField, value) != true)) {
                    this.ValidityTimeSpanField = value;
                    this.RaisePropertyChanged("ValidityTimeSpan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=11)]
        public string RemoteEndpoint {
            get {
                return this.RemoteEndpointField;
            }
            set {
                if ((object.ReferenceEquals(this.RemoteEndpointField, value) != true)) {
                    this.RemoteEndpointField = value;
                    this.RaisePropertyChanged("RemoteEndpoint");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://backend.neocron-game.com/", ConfigurationName="NeocronSessionManagement.SessionManagementSoap")]
    public interface SessionManagementSoap {
        
        // CODEGEN: Generating message contract since element name user from namespace http://backend.neocron-game.com/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://backend.neocron-game.com/Login", ReplyAction="*")]
        NeocronWorldMap.Web.NeocronSessionManagement.LoginResponse Login(NeocronWorldMap.Web.NeocronSessionManagement.LoginRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://backend.neocron-game.com/Login", ReplyAction="*")]
        System.Threading.Tasks.Task<NeocronWorldMap.Web.NeocronSessionManagement.LoginResponse> LoginAsync(NeocronWorldMap.Web.NeocronSessionManagement.LoginRequest request);
        
        // CODEGEN: Generating message contract since element name ResetSessionsResult from namespace http://backend.neocron-game.com/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://backend.neocron-game.com/ResetSessions", ReplyAction="*")]
        NeocronWorldMap.Web.NeocronSessionManagement.ResetSessionsResponse ResetSessions(NeocronWorldMap.Web.NeocronSessionManagement.ResetSessionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://backend.neocron-game.com/ResetSessions", ReplyAction="*")]
        System.Threading.Tasks.Task<NeocronWorldMap.Web.NeocronSessionManagement.ResetSessionsResponse> ResetSessionsAsync(NeocronWorldMap.Web.NeocronSessionManagement.ResetSessionsRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class LoginRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="Login", Namespace="http://backend.neocron-game.com/", Order=0)]
        public NeocronWorldMap.Web.NeocronSessionManagement.LoginRequestBody Body;
        
        public LoginRequest() {
        }
        
        public LoginRequest(NeocronWorldMap.Web.NeocronSessionManagement.LoginRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://backend.neocron-game.com/")]
    public partial class LoginRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string user;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string password;
        
        public LoginRequestBody() {
        }
        
        public LoginRequestBody(string user, string password) {
            this.user = user;
            this.password = password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class LoginResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="LoginResponse", Namespace="http://backend.neocron-game.com/", Order=0)]
        public NeocronWorldMap.Web.NeocronSessionManagement.LoginResponseBody Body;
        
        public LoginResponse() {
        }
        
        public LoginResponse(NeocronWorldMap.Web.NeocronSessionManagement.LoginResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://backend.neocron-game.com/")]
    public partial class LoginResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public NeocronWorldMap.Web.NeocronSessionManagement.SessionDetails LoginResult;
        
        public LoginResponseBody() {
        }
        
        public LoginResponseBody(NeocronWorldMap.Web.NeocronSessionManagement.SessionDetails LoginResult) {
            this.LoginResult = LoginResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ResetSessionsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ResetSessions", Namespace="http://backend.neocron-game.com/", Order=0)]
        public NeocronWorldMap.Web.NeocronSessionManagement.ResetSessionsRequestBody Body;
        
        public ResetSessionsRequest() {
        }
        
        public ResetSessionsRequest(NeocronWorldMap.Web.NeocronSessionManagement.ResetSessionsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://backend.neocron-game.com/")]
    public partial class ResetSessionsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public System.Guid token;
        
        public ResetSessionsRequestBody() {
        }
        
        public ResetSessionsRequestBody(System.Guid token) {
            this.token = token;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ResetSessionsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ResetSessionsResponse", Namespace="http://backend.neocron-game.com/", Order=0)]
        public NeocronWorldMap.Web.NeocronSessionManagement.ResetSessionsResponseBody Body;
        
        public ResetSessionsResponse() {
        }
        
        public ResetSessionsResponse(NeocronWorldMap.Web.NeocronSessionManagement.ResetSessionsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://backend.neocron-game.com/")]
    public partial class ResetSessionsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public NeocronWorldMap.Web.NeocronSessionManagement.BasicResult ResetSessionsResult;
        
        public ResetSessionsResponseBody() {
        }
        
        public ResetSessionsResponseBody(NeocronWorldMap.Web.NeocronSessionManagement.BasicResult ResetSessionsResult) {
            this.ResetSessionsResult = ResetSessionsResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface SessionManagementSoapChannel : NeocronWorldMap.Web.NeocronSessionManagement.SessionManagementSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SessionManagementSoapClient : System.ServiceModel.ClientBase<NeocronWorldMap.Web.NeocronSessionManagement.SessionManagementSoap>, NeocronWorldMap.Web.NeocronSessionManagement.SessionManagementSoap {
        
        public SessionManagementSoapClient() {
        }
        
        public SessionManagementSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SessionManagementSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SessionManagementSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SessionManagementSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NeocronWorldMap.Web.NeocronSessionManagement.LoginResponse NeocronWorldMap.Web.NeocronSessionManagement.SessionManagementSoap.Login(NeocronWorldMap.Web.NeocronSessionManagement.LoginRequest request) {
            return base.Channel.Login(request);
        }
        
        public NeocronWorldMap.Web.NeocronSessionManagement.SessionDetails Login(string user, string password) {
            NeocronWorldMap.Web.NeocronSessionManagement.LoginRequest inValue = new NeocronWorldMap.Web.NeocronSessionManagement.LoginRequest();
            inValue.Body = new NeocronWorldMap.Web.NeocronSessionManagement.LoginRequestBody();
            inValue.Body.user = user;
            inValue.Body.password = password;
            NeocronWorldMap.Web.NeocronSessionManagement.LoginResponse retVal = ((NeocronWorldMap.Web.NeocronSessionManagement.SessionManagementSoap)(this)).Login(inValue);
            return retVal.Body.LoginResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NeocronWorldMap.Web.NeocronSessionManagement.LoginResponse> NeocronWorldMap.Web.NeocronSessionManagement.SessionManagementSoap.LoginAsync(NeocronWorldMap.Web.NeocronSessionManagement.LoginRequest request) {
            return base.Channel.LoginAsync(request);
        }
        
        public System.Threading.Tasks.Task<NeocronWorldMap.Web.NeocronSessionManagement.LoginResponse> LoginAsync(string user, string password) {
            NeocronWorldMap.Web.NeocronSessionManagement.LoginRequest inValue = new NeocronWorldMap.Web.NeocronSessionManagement.LoginRequest();
            inValue.Body = new NeocronWorldMap.Web.NeocronSessionManagement.LoginRequestBody();
            inValue.Body.user = user;
            inValue.Body.password = password;
            return ((NeocronWorldMap.Web.NeocronSessionManagement.SessionManagementSoap)(this)).LoginAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NeocronWorldMap.Web.NeocronSessionManagement.ResetSessionsResponse NeocronWorldMap.Web.NeocronSessionManagement.SessionManagementSoap.ResetSessions(NeocronWorldMap.Web.NeocronSessionManagement.ResetSessionsRequest request) {
            return base.Channel.ResetSessions(request);
        }
        
        public NeocronWorldMap.Web.NeocronSessionManagement.BasicResult ResetSessions(System.Guid token) {
            NeocronWorldMap.Web.NeocronSessionManagement.ResetSessionsRequest inValue = new NeocronWorldMap.Web.NeocronSessionManagement.ResetSessionsRequest();
            inValue.Body = new NeocronWorldMap.Web.NeocronSessionManagement.ResetSessionsRequestBody();
            inValue.Body.token = token;
            NeocronWorldMap.Web.NeocronSessionManagement.ResetSessionsResponse retVal = ((NeocronWorldMap.Web.NeocronSessionManagement.SessionManagementSoap)(this)).ResetSessions(inValue);
            return retVal.Body.ResetSessionsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NeocronWorldMap.Web.NeocronSessionManagement.ResetSessionsResponse> NeocronWorldMap.Web.NeocronSessionManagement.SessionManagementSoap.ResetSessionsAsync(NeocronWorldMap.Web.NeocronSessionManagement.ResetSessionsRequest request) {
            return base.Channel.ResetSessionsAsync(request);
        }
        
        public System.Threading.Tasks.Task<NeocronWorldMap.Web.NeocronSessionManagement.ResetSessionsResponse> ResetSessionsAsync(System.Guid token) {
            NeocronWorldMap.Web.NeocronSessionManagement.ResetSessionsRequest inValue = new NeocronWorldMap.Web.NeocronSessionManagement.ResetSessionsRequest();
            inValue.Body = new NeocronWorldMap.Web.NeocronSessionManagement.ResetSessionsRequestBody();
            inValue.Body.token = token;
            return ((NeocronWorldMap.Web.NeocronSessionManagement.SessionManagementSoap)(this)).ResetSessionsAsync(inValue);
        }
    }
}
