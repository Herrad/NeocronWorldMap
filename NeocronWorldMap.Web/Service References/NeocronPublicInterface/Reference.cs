//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NeocronWorldMap.Web.NeocronPublicInterface {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BasicResult", Namespace="http://backend.neocron-game.com/")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NeocronWorldMap.Web.NeocronPublicInterface.OutpostListResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NeocronWorldMap.Web.NeocronPublicInterface.ServerStatisticResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NeocronWorldMap.Web.NeocronPublicInterface.ExtendedForumResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NeocronWorldMap.Web.NeocronPublicInterface.ExtendedCharacterListResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NeocronWorldMap.Web.NeocronPublicInterface.ExtendedMailListResult))]
    public partial class BasicResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private bool RequestSucceededField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool RequestSucceeded {
            get {
                return this.RequestSucceededField;
            }
            set {
                if ((this.RequestSucceededField.Equals(value) != true)) {
                    this.RequestSucceededField = value;
                    this.RaisePropertyChanged("RequestSucceeded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OutpostListResult", Namespace="http://backend.neocron-game.com/")]
    [System.SerializableAttribute()]
    public partial class OutpostListResult : NeocronWorldMap.Web.NeocronPublicInterface.BasicResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private NeocronWorldMap.Web.NeocronPublicInterface.ExtendedOutpost[] OutpostsField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public NeocronWorldMap.Web.NeocronPublicInterface.ExtendedOutpost[] Outposts {
            get {
                return this.OutpostsField;
            }
            set {
                if ((object.ReferenceEquals(this.OutpostsField, value) != true)) {
                    this.OutpostsField = value;
                    this.RaisePropertyChanged("Outposts");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServerStatisticResult", Namespace="http://backend.neocron-game.com/")]
    [System.SerializableAttribute()]
    public partial class ServerStatisticResult : NeocronWorldMap.Web.NeocronPublicInterface.BasicResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private NeocronWorldMap.Web.NeocronPublicInterface.ServerStatistic[] ServerStatisticsField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public NeocronWorldMap.Web.NeocronPublicInterface.ServerStatistic[] ServerStatistics {
            get {
                return this.ServerStatisticsField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerStatisticsField, value) != true)) {
                    this.ServerStatisticsField = value;
                    this.RaisePropertyChanged("ServerStatistics");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExtendedForumResult", Namespace="http://backend.neocron-game.com/")]
    [System.SerializableAttribute()]
    public partial class ExtendedForumResult : NeocronWorldMap.Web.NeocronPublicInterface.BasicResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private NeocronWorldMap.Web.NeocronPublicInterface.ExtendedBulletinBoard[] PostsField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Server {
            get {
                return this.ServerField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerField, value) != true)) {
                    this.ServerField = value;
                    this.RaisePropertyChanged("Server");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public NeocronWorldMap.Web.NeocronPublicInterface.ExtendedBulletinBoard[] Posts {
            get {
                return this.PostsField;
            }
            set {
                if ((object.ReferenceEquals(this.PostsField, value) != true)) {
                    this.PostsField = value;
                    this.RaisePropertyChanged("Posts");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExtendedCharacterListResult", Namespace="http://backend.neocron-game.com/")]
    [System.SerializableAttribute()]
    public partial class ExtendedCharacterListResult : NeocronWorldMap.Web.NeocronPublicInterface.BasicResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private NeocronWorldMap.Web.NeocronPublicInterface.ExtendedCharacter[] CharactersField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public NeocronWorldMap.Web.NeocronPublicInterface.ExtendedCharacter[] Characters {
            get {
                return this.CharactersField;
            }
            set {
                if ((object.ReferenceEquals(this.CharactersField, value) != true)) {
                    this.CharactersField = value;
                    this.RaisePropertyChanged("Characters");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExtendedMailListResult", Namespace="http://backend.neocron-game.com/")]
    [System.SerializableAttribute()]
    public partial class ExtendedMailListResult : NeocronWorldMap.Web.NeocronPublicInterface.BasicResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private NeocronWorldMap.Web.NeocronPublicInterface.ExtendedMail[] IncomingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private NeocronWorldMap.Web.NeocronPublicInterface.ExtendedMail[] OutgoingField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public NeocronWorldMap.Web.NeocronPublicInterface.ExtendedMail[] Incoming {
            get {
                return this.IncomingField;
            }
            set {
                if ((object.ReferenceEquals(this.IncomingField, value) != true)) {
                    this.IncomingField = value;
                    this.RaisePropertyChanged("Incoming");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public NeocronWorldMap.Web.NeocronPublicInterface.ExtendedMail[] Outgoing {
            get {
                return this.OutgoingField;
            }
            set {
                if ((object.ReferenceEquals(this.OutgoingField, value) != true)) {
                    this.OutgoingField = value;
                    this.RaisePropertyChanged("Outgoing");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExtendedOutpost", Namespace="http://backend.neocron-game.com/")]
    [System.SerializableAttribute()]
    public partial class ExtendedOutpost : NeocronWorldMap.Web.NeocronPublicInterface.Outpost {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SectorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FactionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private NeocronWorldMap.Web.NeocronPublicInterface.Clan ClanField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Sector {
            get {
                return this.SectorField;
            }
            set {
                if ((object.ReferenceEquals(this.SectorField, value) != true)) {
                    this.SectorField = value;
                    this.RaisePropertyChanged("Sector");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string Faction {
            get {
                return this.FactionField;
            }
            set {
                if ((object.ReferenceEquals(this.FactionField, value) != true)) {
                    this.FactionField = value;
                    this.RaisePropertyChanged("Faction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public NeocronWorldMap.Web.NeocronPublicInterface.Clan Clan {
            get {
                return this.ClanField;
            }
            set {
                if ((object.ReferenceEquals(this.ClanField, value) != true)) {
                    this.ClanField = value;
                    this.RaisePropertyChanged("Clan");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Outpost", Namespace="http://backend.neocron-game.com/")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NeocronWorldMap.Web.NeocronPublicInterface.ExtendedOutpost))]
    public partial class Outpost : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int IdField;
        
        private int EnemyIdField;
        
        private int ClanIdField;
        
        private int SecuritySettingField;
        
        private System.DateTime LastpayTimeField;
        
        private System.DateTime ConquerTimeField;
        
        private int RewardField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public int EnemyId {
            get {
                return this.EnemyIdField;
            }
            set {
                if ((this.EnemyIdField.Equals(value) != true)) {
                    this.EnemyIdField = value;
                    this.RaisePropertyChanged("EnemyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public int ClanId {
            get {
                return this.ClanIdField;
            }
            set {
                if ((this.ClanIdField.Equals(value) != true)) {
                    this.ClanIdField = value;
                    this.RaisePropertyChanged("ClanId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public int SecuritySetting {
            get {
                return this.SecuritySettingField;
            }
            set {
                if ((this.SecuritySettingField.Equals(value) != true)) {
                    this.SecuritySettingField = value;
                    this.RaisePropertyChanged("SecuritySetting");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public System.DateTime LastpayTime {
            get {
                return this.LastpayTimeField;
            }
            set {
                if ((this.LastpayTimeField.Equals(value) != true)) {
                    this.LastpayTimeField = value;
                    this.RaisePropertyChanged("LastpayTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public System.DateTime ConquerTime {
            get {
                return this.ConquerTimeField;
            }
            set {
                if ((this.ConquerTimeField.Equals(value) != true)) {
                    this.ConquerTimeField = value;
                    this.RaisePropertyChanged("ConquerTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public int Reward {
            get {
                return this.RewardField;
            }
            set {
                if ((this.RewardField.Equals(value) != true)) {
                    this.RewardField = value;
                    this.RaisePropertyChanged("Reward");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Clan", Namespace="http://backend.neocron-game.com/")]
    [System.SerializableAttribute()]
    public partial class Clan : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShortNameField;
        
        private int AppIdField;
        
        private int OwnerCharIdField;
        
        private int ClanMoneyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] SettingsField;
        
        private int FactionIdField;
        
        private int MinSympathyField;
        
        private int ClanFactionSympathyField;
        
        private int ClanMissionField;
        
        private int LockedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string ShortName {
            get {
                return this.ShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortNameField, value) != true)) {
                    this.ShortNameField = value;
                    this.RaisePropertyChanged("ShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public int AppId {
            get {
                return this.AppIdField;
            }
            set {
                if ((this.AppIdField.Equals(value) != true)) {
                    this.AppIdField = value;
                    this.RaisePropertyChanged("AppId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public int OwnerCharId {
            get {
                return this.OwnerCharIdField;
            }
            set {
                if ((this.OwnerCharIdField.Equals(value) != true)) {
                    this.OwnerCharIdField = value;
                    this.RaisePropertyChanged("OwnerCharId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public int ClanMoney {
            get {
                return this.ClanMoneyField;
            }
            set {
                if ((this.ClanMoneyField.Equals(value) != true)) {
                    this.ClanMoneyField = value;
                    this.RaisePropertyChanged("ClanMoney");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public byte[] Settings {
            get {
                return this.SettingsField;
            }
            set {
                if ((object.ReferenceEquals(this.SettingsField, value) != true)) {
                    this.SettingsField = value;
                    this.RaisePropertyChanged("Settings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=7)]
        public int FactionId {
            get {
                return this.FactionIdField;
            }
            set {
                if ((this.FactionIdField.Equals(value) != true)) {
                    this.FactionIdField = value;
                    this.RaisePropertyChanged("FactionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=8)]
        public int MinSympathy {
            get {
                return this.MinSympathyField;
            }
            set {
                if ((this.MinSympathyField.Equals(value) != true)) {
                    this.MinSympathyField = value;
                    this.RaisePropertyChanged("MinSympathy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=9)]
        public int ClanFactionSympathy {
            get {
                return this.ClanFactionSympathyField;
            }
            set {
                if ((this.ClanFactionSympathyField.Equals(value) != true)) {
                    this.ClanFactionSympathyField = value;
                    this.RaisePropertyChanged("ClanFactionSympathy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=10)]
        public int ClanMission {
            get {
                return this.ClanMissionField;
            }
            set {
                if ((this.ClanMissionField.Equals(value) != true)) {
                    this.ClanMissionField = value;
                    this.RaisePropertyChanged("ClanMission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=11)]
        public int Locked {
            get {
                return this.LockedField;
            }
            set {
                if ((this.LockedField.Equals(value) != true)) {
                    this.LockedField = value;
                    this.RaisePropertyChanged("Locked");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServerStatistic", Namespace="http://backend.neocron-game.com/")]
    [System.SerializableAttribute()]
    public partial class ServerStatistic : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        private long PlayersField;
        
        private int LatencyField;
        
        private bool IsOnlineField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long Players {
            get {
                return this.PlayersField;
            }
            set {
                if ((this.PlayersField.Equals(value) != true)) {
                    this.PlayersField = value;
                    this.RaisePropertyChanged("Players");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public int Latency {
            get {
                return this.LatencyField;
            }
            set {
                if ((this.LatencyField.Equals(value) != true)) {
                    this.LatencyField = value;
                    this.RaisePropertyChanged("Latency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public bool IsOnline {
            get {
                return this.IsOnlineField;
            }
            set {
                if ((this.IsOnlineField.Equals(value) != true)) {
                    this.IsOnlineField = value;
                    this.RaisePropertyChanged("IsOnline");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExtendedBulletinBoard", Namespace="http://backend.neocron-game.com/")]
    [System.SerializableAttribute()]
    public partial class ExtendedBulletinBoard : NeocronWorldMap.Web.NeocronPublicInterface.BulletinBoard {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BoardField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorField, value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Server {
            get {
                return this.ServerField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerField, value) != true)) {
                    this.ServerField = value;
                    this.RaisePropertyChanged("Server");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Board {
            get {
                return this.BoardField;
            }
            set {
                if ((object.ReferenceEquals(this.BoardField, value) != true)) {
                    this.BoardField = value;
                    this.RaisePropertyChanged("Board");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BulletinBoard", Namespace="http://backend.neocron-game.com/")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NeocronWorldMap.Web.NeocronPublicInterface.ExtendedBulletinBoard))]
    public partial class BulletinBoard : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int IdField;
        
        private int Parent_IdField;
        
        private int From_CharField;
        
        private System.DateTime TimeStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BodyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Parent_Id {
            get {
                return this.Parent_IdField;
            }
            set {
                if ((this.Parent_IdField.Equals(value) != true)) {
                    this.Parent_IdField = value;
                    this.RaisePropertyChanged("Parent_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public int From_Char {
            get {
                return this.From_CharField;
            }
            set {
                if ((this.From_CharField.Equals(value) != true)) {
                    this.From_CharField = value;
                    this.RaisePropertyChanged("From_Char");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public System.DateTime TimeStamp {
            get {
                return this.TimeStampField;
            }
            set {
                if ((this.TimeStampField.Equals(value) != true)) {
                    this.TimeStampField = value;
                    this.RaisePropertyChanged("TimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string Subject {
            get {
                return this.SubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectField, value) != true)) {
                    this.SubjectField = value;
                    this.RaisePropertyChanged("Subject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string Body {
            get {
                return this.BodyField;
            }
            set {
                if ((object.ReferenceEquals(this.BodyField, value) != true)) {
                    this.BodyField = value;
                    this.RaisePropertyChanged("Body");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExtendedCharacter", Namespace="http://backend.neocron-game.com/")]
    [System.SerializableAttribute()]
    public partial class ExtendedCharacter : NeocronWorldMap.Web.NeocronPublicInterface.Character {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SectorField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Sector {
            get {
                return this.SectorField;
            }
            set {
                if ((object.ReferenceEquals(this.SectorField, value) != true)) {
                    this.SectorField = value;
                    this.RaisePropertyChanged("Sector");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Character", Namespace="http://backend.neocron-game.com/")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NeocronWorldMap.Web.NeocronPublicInterface.ExtendedCharacter))]
    public partial class Character : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        private int WorldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] CharInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] CharSysInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] GoguardianItemsField;
        
        private System.DateTime LastConnectTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OnlineField;
        
        private int FactionIdField;
        
        private int FactionSympathyField;
        
        private int ClanIdField;
        
        private int ClanLevelField;
        
        private int ShowInfoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int World {
            get {
                return this.WorldField;
            }
            set {
                if ((this.WorldField.Equals(value) != true)) {
                    this.WorldField = value;
                    this.RaisePropertyChanged("World");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public byte[] CharInfo {
            get {
                return this.CharInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.CharInfoField, value) != true)) {
                    this.CharInfoField = value;
                    this.RaisePropertyChanged("CharInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public byte[] CharSysInfo {
            get {
                return this.CharSysInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.CharSysInfoField, value) != true)) {
                    this.CharSysInfoField = value;
                    this.RaisePropertyChanged("CharSysInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public byte[] GoguardianItems {
            get {
                return this.GoguardianItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.GoguardianItemsField, value) != true)) {
                    this.GoguardianItemsField = value;
                    this.RaisePropertyChanged("GoguardianItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public System.DateTime LastConnectTime {
            get {
                return this.LastConnectTimeField;
            }
            set {
                if ((this.LastConnectTimeField.Equals(value) != true)) {
                    this.LastConnectTimeField = value;
                    this.RaisePropertyChanged("LastConnectTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string Online {
            get {
                return this.OnlineField;
            }
            set {
                if ((object.ReferenceEquals(this.OnlineField, value) != true)) {
                    this.OnlineField = value;
                    this.RaisePropertyChanged("Online");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=8)]
        public int FactionId {
            get {
                return this.FactionIdField;
            }
            set {
                if ((this.FactionIdField.Equals(value) != true)) {
                    this.FactionIdField = value;
                    this.RaisePropertyChanged("FactionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=9)]
        public int FactionSympathy {
            get {
                return this.FactionSympathyField;
            }
            set {
                if ((this.FactionSympathyField.Equals(value) != true)) {
                    this.FactionSympathyField = value;
                    this.RaisePropertyChanged("FactionSympathy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=10)]
        public int ClanId {
            get {
                return this.ClanIdField;
            }
            set {
                if ((this.ClanIdField.Equals(value) != true)) {
                    this.ClanIdField = value;
                    this.RaisePropertyChanged("ClanId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=11)]
        public int ClanLevel {
            get {
                return this.ClanLevelField;
            }
            set {
                if ((this.ClanLevelField.Equals(value) != true)) {
                    this.ClanLevelField = value;
                    this.RaisePropertyChanged("ClanLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=12)]
        public int ShowInfo {
            get {
                return this.ShowInfoField;
            }
            set {
                if ((this.ShowInfoField.Equals(value) != true)) {
                    this.ShowInfoField = value;
                    this.RaisePropertyChanged("ShowInfo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExtendedMail", Namespace="http://backend.neocron-game.com/")]
    [System.SerializableAttribute()]
    public partial class ExtendedMail : NeocronWorldMap.Web.NeocronPublicInterface.Mail {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiverField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Sender {
            get {
                return this.SenderField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderField, value) != true)) {
                    this.SenderField = value;
                    this.RaisePropertyChanged("Sender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string Receiver {
            get {
                return this.ReceiverField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverField, value) != true)) {
                    this.ReceiverField = value;
                    this.RaisePropertyChanged("Receiver");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Mail", Namespace="http://backend.neocron-game.com/")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NeocronWorldMap.Web.NeocronPublicInterface.ExtendedMail))]
    public partial class Mail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int IdField;
        
        private int From_CharField;
        
        private int To_CharField;
        
        private System.DateTime TimeStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BodyField;
        
        private int RepliedField;
        
        private int NewField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public int From_Char {
            get {
                return this.From_CharField;
            }
            set {
                if ((this.From_CharField.Equals(value) != true)) {
                    this.From_CharField = value;
                    this.RaisePropertyChanged("From_Char");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public int To_Char {
            get {
                return this.To_CharField;
            }
            set {
                if ((this.To_CharField.Equals(value) != true)) {
                    this.To_CharField = value;
                    this.RaisePropertyChanged("To_Char");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public System.DateTime TimeStamp {
            get {
                return this.TimeStampField;
            }
            set {
                if ((this.TimeStampField.Equals(value) != true)) {
                    this.TimeStampField = value;
                    this.RaisePropertyChanged("TimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string Subject {
            get {
                return this.SubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectField, value) != true)) {
                    this.SubjectField = value;
                    this.RaisePropertyChanged("Subject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string Body {
            get {
                return this.BodyField;
            }
            set {
                if ((object.ReferenceEquals(this.BodyField, value) != true)) {
                    this.BodyField = value;
                    this.RaisePropertyChanged("Body");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public int Replied {
            get {
                return this.RepliedField;
            }
            set {
                if ((this.RepliedField.Equals(value) != true)) {
                    this.RepliedField = value;
                    this.RaisePropertyChanged("Replied");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=7)]
        public int New {
            get {
                return this.NewField;
            }
            set {
                if ((this.NewField.Equals(value) != true)) {
                    this.NewField = value;
                    this.RaisePropertyChanged("New");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://backend.neocron-game.com/", ConfigurationName="NeocronPublicInterface.PublicInterfaceSoap")]
    public interface PublicInterfaceSoap {
        
        // CODEGEN: Generating message contract since element name newPassword from namespace http://backend.neocron-game.com/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://backend.neocron-game.com/ChangePassword", ReplyAction="*")]
        NeocronWorldMap.Web.NeocronPublicInterface.ChangePasswordResponse ChangePassword(NeocronWorldMap.Web.NeocronPublicInterface.ChangePasswordRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://backend.neocron-game.com/ChangePassword", ReplyAction="*")]
        System.Threading.Tasks.Task<NeocronWorldMap.Web.NeocronPublicInterface.ChangePasswordResponse> ChangePasswordAsync(NeocronWorldMap.Web.NeocronPublicInterface.ChangePasswordRequest request);
        
        // CODEGEN: Generating message contract since element name server from namespace http://backend.neocron-game.com/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://backend.neocron-game.com/GetOutposts", ReplyAction="*")]
        NeocronWorldMap.Web.NeocronPublicInterface.GetOutpostsResponse GetOutposts(NeocronWorldMap.Web.NeocronPublicInterface.GetOutpostsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://backend.neocron-game.com/GetOutposts", ReplyAction="*")]
        System.Threading.Tasks.Task<NeocronWorldMap.Web.NeocronPublicInterface.GetOutpostsResponse> GetOutpostsAsync(NeocronWorldMap.Web.NeocronPublicInterface.GetOutpostsRequest request);
        
        // CODEGEN: Generating message contract since element name GetServerStatisticsResult from namespace http://backend.neocron-game.com/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://backend.neocron-game.com/GetServerStatistics", ReplyAction="*")]
        NeocronWorldMap.Web.NeocronPublicInterface.GetServerStatisticsResponse GetServerStatistics(NeocronWorldMap.Web.NeocronPublicInterface.GetServerStatisticsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://backend.neocron-game.com/GetServerStatistics", ReplyAction="*")]
        System.Threading.Tasks.Task<NeocronWorldMap.Web.NeocronPublicInterface.GetServerStatisticsResponse> GetServerStatisticsAsync(NeocronWorldMap.Web.NeocronPublicInterface.GetServerStatisticsRequest request);
        
        // CODEGEN: Generating message contract since element name server from namespace http://backend.neocron-game.com/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://backend.neocron-game.com/GetPosts", ReplyAction="*")]
        NeocronWorldMap.Web.NeocronPublicInterface.GetPostsResponse GetPosts(NeocronWorldMap.Web.NeocronPublicInterface.GetPostsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://backend.neocron-game.com/GetPosts", ReplyAction="*")]
        System.Threading.Tasks.Task<NeocronWorldMap.Web.NeocronPublicInterface.GetPostsResponse> GetPostsAsync(NeocronWorldMap.Web.NeocronPublicInterface.GetPostsRequest request);
        
        // CODEGEN: Generating message contract since element name server from namespace http://backend.neocron-game.com/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://backend.neocron-game.com/GetCharacters", ReplyAction="*")]
        NeocronWorldMap.Web.NeocronPublicInterface.GetCharactersResponse GetCharacters(NeocronWorldMap.Web.NeocronPublicInterface.GetCharactersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://backend.neocron-game.com/GetCharacters", ReplyAction="*")]
        System.Threading.Tasks.Task<NeocronWorldMap.Web.NeocronPublicInterface.GetCharactersResponse> GetCharactersAsync(NeocronWorldMap.Web.NeocronPublicInterface.GetCharactersRequest request);
        
        // CODEGEN: Generating message contract since element name character from namespace http://backend.neocron-game.com/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://backend.neocron-game.com/GetMails", ReplyAction="*")]
        NeocronWorldMap.Web.NeocronPublicInterface.GetMailsResponse GetMails(NeocronWorldMap.Web.NeocronPublicInterface.GetMailsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://backend.neocron-game.com/GetMails", ReplyAction="*")]
        System.Threading.Tasks.Task<NeocronWorldMap.Web.NeocronPublicInterface.GetMailsResponse> GetMailsAsync(NeocronWorldMap.Web.NeocronPublicInterface.GetMailsRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ChangePasswordRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ChangePassword", Namespace="http://backend.neocron-game.com/", Order=0)]
        public NeocronWorldMap.Web.NeocronPublicInterface.ChangePasswordRequestBody Body;
        
        public ChangePasswordRequest() {
        }
        
        public ChangePasswordRequest(NeocronWorldMap.Web.NeocronPublicInterface.ChangePasswordRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://backend.neocron-game.com/")]
    public partial class ChangePasswordRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public System.Guid token;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string newPassword;
        
        public ChangePasswordRequestBody() {
        }
        
        public ChangePasswordRequestBody(System.Guid token, string newPassword) {
            this.token = token;
            this.newPassword = newPassword;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ChangePasswordResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ChangePasswordResponse", Namespace="http://backend.neocron-game.com/", Order=0)]
        public NeocronWorldMap.Web.NeocronPublicInterface.ChangePasswordResponseBody Body;
        
        public ChangePasswordResponse() {
        }
        
        public ChangePasswordResponse(NeocronWorldMap.Web.NeocronPublicInterface.ChangePasswordResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://backend.neocron-game.com/")]
    public partial class ChangePasswordResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public NeocronWorldMap.Web.NeocronPublicInterface.BasicResult ChangePasswordResult;
        
        public ChangePasswordResponseBody() {
        }
        
        public ChangePasswordResponseBody(NeocronWorldMap.Web.NeocronPublicInterface.BasicResult ChangePasswordResult) {
            this.ChangePasswordResult = ChangePasswordResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetOutpostsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetOutposts", Namespace="http://backend.neocron-game.com/", Order=0)]
        public NeocronWorldMap.Web.NeocronPublicInterface.GetOutpostsRequestBody Body;
        
        public GetOutpostsRequest() {
        }
        
        public GetOutpostsRequest(NeocronWorldMap.Web.NeocronPublicInterface.GetOutpostsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://backend.neocron-game.com/")]
    public partial class GetOutpostsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public System.Guid token;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string server;
        
        public GetOutpostsRequestBody() {
        }
        
        public GetOutpostsRequestBody(System.Guid token, string server) {
            this.token = token;
            this.server = server;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetOutpostsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetOutpostsResponse", Namespace="http://backend.neocron-game.com/", Order=0)]
        public NeocronWorldMap.Web.NeocronPublicInterface.GetOutpostsResponseBody Body;
        
        public GetOutpostsResponse() {
        }
        
        public GetOutpostsResponse(NeocronWorldMap.Web.NeocronPublicInterface.GetOutpostsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://backend.neocron-game.com/")]
    public partial class GetOutpostsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public NeocronWorldMap.Web.NeocronPublicInterface.OutpostListResult GetOutpostsResult;
        
        public GetOutpostsResponseBody() {
        }
        
        public GetOutpostsResponseBody(NeocronWorldMap.Web.NeocronPublicInterface.OutpostListResult GetOutpostsResult) {
            this.GetOutpostsResult = GetOutpostsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetServerStatisticsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetServerStatistics", Namespace="http://backend.neocron-game.com/", Order=0)]
        public NeocronWorldMap.Web.NeocronPublicInterface.GetServerStatisticsRequestBody Body;
        
        public GetServerStatisticsRequest() {
        }
        
        public GetServerStatisticsRequest(NeocronWorldMap.Web.NeocronPublicInterface.GetServerStatisticsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://backend.neocron-game.com/")]
    public partial class GetServerStatisticsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public System.Guid token;
        
        public GetServerStatisticsRequestBody() {
        }
        
        public GetServerStatisticsRequestBody(System.Guid token) {
            this.token = token;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetServerStatisticsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetServerStatisticsResponse", Namespace="http://backend.neocron-game.com/", Order=0)]
        public NeocronWorldMap.Web.NeocronPublicInterface.GetServerStatisticsResponseBody Body;
        
        public GetServerStatisticsResponse() {
        }
        
        public GetServerStatisticsResponse(NeocronWorldMap.Web.NeocronPublicInterface.GetServerStatisticsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://backend.neocron-game.com/")]
    public partial class GetServerStatisticsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public NeocronWorldMap.Web.NeocronPublicInterface.ServerStatisticResult GetServerStatisticsResult;
        
        public GetServerStatisticsResponseBody() {
        }
        
        public GetServerStatisticsResponseBody(NeocronWorldMap.Web.NeocronPublicInterface.ServerStatisticResult GetServerStatisticsResult) {
            this.GetServerStatisticsResult = GetServerStatisticsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetPostsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetPosts", Namespace="http://backend.neocron-game.com/", Order=0)]
        public NeocronWorldMap.Web.NeocronPublicInterface.GetPostsRequestBody Body;
        
        public GetPostsRequest() {
        }
        
        public GetPostsRequest(NeocronWorldMap.Web.NeocronPublicInterface.GetPostsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://backend.neocron-game.com/")]
    public partial class GetPostsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public System.Guid token;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string server;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string forum;
        
        public GetPostsRequestBody() {
        }
        
        public GetPostsRequestBody(System.Guid token, string server, string forum) {
            this.token = token;
            this.server = server;
            this.forum = forum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetPostsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetPostsResponse", Namespace="http://backend.neocron-game.com/", Order=0)]
        public NeocronWorldMap.Web.NeocronPublicInterface.GetPostsResponseBody Body;
        
        public GetPostsResponse() {
        }
        
        public GetPostsResponse(NeocronWorldMap.Web.NeocronPublicInterface.GetPostsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://backend.neocron-game.com/")]
    public partial class GetPostsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public NeocronWorldMap.Web.NeocronPublicInterface.ExtendedForumResult GetPostsResult;
        
        public GetPostsResponseBody() {
        }
        
        public GetPostsResponseBody(NeocronWorldMap.Web.NeocronPublicInterface.ExtendedForumResult GetPostsResult) {
            this.GetPostsResult = GetPostsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetCharactersRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetCharacters", Namespace="http://backend.neocron-game.com/", Order=0)]
        public NeocronWorldMap.Web.NeocronPublicInterface.GetCharactersRequestBody Body;
        
        public GetCharactersRequest() {
        }
        
        public GetCharactersRequest(NeocronWorldMap.Web.NeocronPublicInterface.GetCharactersRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://backend.neocron-game.com/")]
    public partial class GetCharactersRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public System.Guid token;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string server;
        
        public GetCharactersRequestBody() {
        }
        
        public GetCharactersRequestBody(System.Guid token, string server) {
            this.token = token;
            this.server = server;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetCharactersResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetCharactersResponse", Namespace="http://backend.neocron-game.com/", Order=0)]
        public NeocronWorldMap.Web.NeocronPublicInterface.GetCharactersResponseBody Body;
        
        public GetCharactersResponse() {
        }
        
        public GetCharactersResponse(NeocronWorldMap.Web.NeocronPublicInterface.GetCharactersResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://backend.neocron-game.com/")]
    public partial class GetCharactersResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public NeocronWorldMap.Web.NeocronPublicInterface.ExtendedCharacterListResult GetCharactersResult;
        
        public GetCharactersResponseBody() {
        }
        
        public GetCharactersResponseBody(NeocronWorldMap.Web.NeocronPublicInterface.ExtendedCharacterListResult GetCharactersResult) {
            this.GetCharactersResult = GetCharactersResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetMailsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetMails", Namespace="http://backend.neocron-game.com/", Order=0)]
        public NeocronWorldMap.Web.NeocronPublicInterface.GetMailsRequestBody Body;
        
        public GetMailsRequest() {
        }
        
        public GetMailsRequest(NeocronWorldMap.Web.NeocronPublicInterface.GetMailsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://backend.neocron-game.com/")]
    public partial class GetMailsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public System.Guid token;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string character;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string server;
        
        public GetMailsRequestBody() {
        }
        
        public GetMailsRequestBody(System.Guid token, string character, string server) {
            this.token = token;
            this.character = character;
            this.server = server;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetMailsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetMailsResponse", Namespace="http://backend.neocron-game.com/", Order=0)]
        public NeocronWorldMap.Web.NeocronPublicInterface.GetMailsResponseBody Body;
        
        public GetMailsResponse() {
        }
        
        public GetMailsResponse(NeocronWorldMap.Web.NeocronPublicInterface.GetMailsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://backend.neocron-game.com/")]
    public partial class GetMailsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public NeocronWorldMap.Web.NeocronPublicInterface.ExtendedMailListResult GetMailsResult;
        
        public GetMailsResponseBody() {
        }
        
        public GetMailsResponseBody(NeocronWorldMap.Web.NeocronPublicInterface.ExtendedMailListResult GetMailsResult) {
            this.GetMailsResult = GetMailsResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface PublicInterfaceSoapChannel : NeocronWorldMap.Web.NeocronPublicInterface.PublicInterfaceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PublicInterfaceSoapClient : System.ServiceModel.ClientBase<NeocronWorldMap.Web.NeocronPublicInterface.PublicInterfaceSoap>, NeocronWorldMap.Web.NeocronPublicInterface.PublicInterfaceSoap {
        
        public PublicInterfaceSoapClient() {
        }
        
        public PublicInterfaceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PublicInterfaceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PublicInterfaceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PublicInterfaceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NeocronWorldMap.Web.NeocronPublicInterface.ChangePasswordResponse NeocronWorldMap.Web.NeocronPublicInterface.PublicInterfaceSoap.ChangePassword(NeocronWorldMap.Web.NeocronPublicInterface.ChangePasswordRequest request) {
            return base.Channel.ChangePassword(request);
        }
        
        public NeocronWorldMap.Web.NeocronPublicInterface.BasicResult ChangePassword(System.Guid token, string newPassword) {
            NeocronWorldMap.Web.NeocronPublicInterface.ChangePasswordRequest inValue = new NeocronWorldMap.Web.NeocronPublicInterface.ChangePasswordRequest();
            inValue.Body = new NeocronWorldMap.Web.NeocronPublicInterface.ChangePasswordRequestBody();
            inValue.Body.token = token;
            inValue.Body.newPassword = newPassword;
            NeocronWorldMap.Web.NeocronPublicInterface.ChangePasswordResponse retVal = ((NeocronWorldMap.Web.NeocronPublicInterface.PublicInterfaceSoap)(this)).ChangePassword(inValue);
            return retVal.Body.ChangePasswordResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NeocronWorldMap.Web.NeocronPublicInterface.ChangePasswordResponse> NeocronWorldMap.Web.NeocronPublicInterface.PublicInterfaceSoap.ChangePasswordAsync(NeocronWorldMap.Web.NeocronPublicInterface.ChangePasswordRequest request) {
            return base.Channel.ChangePasswordAsync(request);
        }
        
        public System.Threading.Tasks.Task<NeocronWorldMap.Web.NeocronPublicInterface.ChangePasswordResponse> ChangePasswordAsync(System.Guid token, string newPassword) {
            NeocronWorldMap.Web.NeocronPublicInterface.ChangePasswordRequest inValue = new NeocronWorldMap.Web.NeocronPublicInterface.ChangePasswordRequest();
            inValue.Body = new NeocronWorldMap.Web.NeocronPublicInterface.ChangePasswordRequestBody();
            inValue.Body.token = token;
            inValue.Body.newPassword = newPassword;
            return ((NeocronWorldMap.Web.NeocronPublicInterface.PublicInterfaceSoap)(this)).ChangePasswordAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NeocronWorldMap.Web.NeocronPublicInterface.GetOutpostsResponse NeocronWorldMap.Web.NeocronPublicInterface.PublicInterfaceSoap.GetOutposts(NeocronWorldMap.Web.NeocronPublicInterface.GetOutpostsRequest request) {
            return base.Channel.GetOutposts(request);
        }
        
        public NeocronWorldMap.Web.NeocronPublicInterface.OutpostListResult GetOutposts(System.Guid token, string server) {
            NeocronWorldMap.Web.NeocronPublicInterface.GetOutpostsRequest inValue = new NeocronWorldMap.Web.NeocronPublicInterface.GetOutpostsRequest();
            inValue.Body = new NeocronWorldMap.Web.NeocronPublicInterface.GetOutpostsRequestBody();
            inValue.Body.token = token;
            inValue.Body.server = server;
            NeocronWorldMap.Web.NeocronPublicInterface.GetOutpostsResponse retVal = ((NeocronWorldMap.Web.NeocronPublicInterface.PublicInterfaceSoap)(this)).GetOutposts(inValue);
            return retVal.Body.GetOutpostsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NeocronWorldMap.Web.NeocronPublicInterface.GetOutpostsResponse> NeocronWorldMap.Web.NeocronPublicInterface.PublicInterfaceSoap.GetOutpostsAsync(NeocronWorldMap.Web.NeocronPublicInterface.GetOutpostsRequest request) {
            return base.Channel.GetOutpostsAsync(request);
        }
        
        public System.Threading.Tasks.Task<NeocronWorldMap.Web.NeocronPublicInterface.GetOutpostsResponse> GetOutpostsAsync(System.Guid token, string server) {
            NeocronWorldMap.Web.NeocronPublicInterface.GetOutpostsRequest inValue = new NeocronWorldMap.Web.NeocronPublicInterface.GetOutpostsRequest();
            inValue.Body = new NeocronWorldMap.Web.NeocronPublicInterface.GetOutpostsRequestBody();
            inValue.Body.token = token;
            inValue.Body.server = server;
            return ((NeocronWorldMap.Web.NeocronPublicInterface.PublicInterfaceSoap)(this)).GetOutpostsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NeocronWorldMap.Web.NeocronPublicInterface.GetServerStatisticsResponse NeocronWorldMap.Web.NeocronPublicInterface.PublicInterfaceSoap.GetServerStatistics(NeocronWorldMap.Web.NeocronPublicInterface.GetServerStatisticsRequest request) {
            return base.Channel.GetServerStatistics(request);
        }
        
        public NeocronWorldMap.Web.NeocronPublicInterface.ServerStatisticResult GetServerStatistics(System.Guid token) {
            NeocronWorldMap.Web.NeocronPublicInterface.GetServerStatisticsRequest inValue = new NeocronWorldMap.Web.NeocronPublicInterface.GetServerStatisticsRequest();
            inValue.Body = new NeocronWorldMap.Web.NeocronPublicInterface.GetServerStatisticsRequestBody();
            inValue.Body.token = token;
            NeocronWorldMap.Web.NeocronPublicInterface.GetServerStatisticsResponse retVal = ((NeocronWorldMap.Web.NeocronPublicInterface.PublicInterfaceSoap)(this)).GetServerStatistics(inValue);
            return retVal.Body.GetServerStatisticsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NeocronWorldMap.Web.NeocronPublicInterface.GetServerStatisticsResponse> NeocronWorldMap.Web.NeocronPublicInterface.PublicInterfaceSoap.GetServerStatisticsAsync(NeocronWorldMap.Web.NeocronPublicInterface.GetServerStatisticsRequest request) {
            return base.Channel.GetServerStatisticsAsync(request);
        }
        
        public System.Threading.Tasks.Task<NeocronWorldMap.Web.NeocronPublicInterface.GetServerStatisticsResponse> GetServerStatisticsAsync(System.Guid token) {
            NeocronWorldMap.Web.NeocronPublicInterface.GetServerStatisticsRequest inValue = new NeocronWorldMap.Web.NeocronPublicInterface.GetServerStatisticsRequest();
            inValue.Body = new NeocronWorldMap.Web.NeocronPublicInterface.GetServerStatisticsRequestBody();
            inValue.Body.token = token;
            return ((NeocronWorldMap.Web.NeocronPublicInterface.PublicInterfaceSoap)(this)).GetServerStatisticsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NeocronWorldMap.Web.NeocronPublicInterface.GetPostsResponse NeocronWorldMap.Web.NeocronPublicInterface.PublicInterfaceSoap.GetPosts(NeocronWorldMap.Web.NeocronPublicInterface.GetPostsRequest request) {
            return base.Channel.GetPosts(request);
        }
        
        public NeocronWorldMap.Web.NeocronPublicInterface.ExtendedForumResult GetPosts(System.Guid token, string server, string forum) {
            NeocronWorldMap.Web.NeocronPublicInterface.GetPostsRequest inValue = new NeocronWorldMap.Web.NeocronPublicInterface.GetPostsRequest();
            inValue.Body = new NeocronWorldMap.Web.NeocronPublicInterface.GetPostsRequestBody();
            inValue.Body.token = token;
            inValue.Body.server = server;
            inValue.Body.forum = forum;
            NeocronWorldMap.Web.NeocronPublicInterface.GetPostsResponse retVal = ((NeocronWorldMap.Web.NeocronPublicInterface.PublicInterfaceSoap)(this)).GetPosts(inValue);
            return retVal.Body.GetPostsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NeocronWorldMap.Web.NeocronPublicInterface.GetPostsResponse> NeocronWorldMap.Web.NeocronPublicInterface.PublicInterfaceSoap.GetPostsAsync(NeocronWorldMap.Web.NeocronPublicInterface.GetPostsRequest request) {
            return base.Channel.GetPostsAsync(request);
        }
        
        public System.Threading.Tasks.Task<NeocronWorldMap.Web.NeocronPublicInterface.GetPostsResponse> GetPostsAsync(System.Guid token, string server, string forum) {
            NeocronWorldMap.Web.NeocronPublicInterface.GetPostsRequest inValue = new NeocronWorldMap.Web.NeocronPublicInterface.GetPostsRequest();
            inValue.Body = new NeocronWorldMap.Web.NeocronPublicInterface.GetPostsRequestBody();
            inValue.Body.token = token;
            inValue.Body.server = server;
            inValue.Body.forum = forum;
            return ((NeocronWorldMap.Web.NeocronPublicInterface.PublicInterfaceSoap)(this)).GetPostsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NeocronWorldMap.Web.NeocronPublicInterface.GetCharactersResponse NeocronWorldMap.Web.NeocronPublicInterface.PublicInterfaceSoap.GetCharacters(NeocronWorldMap.Web.NeocronPublicInterface.GetCharactersRequest request) {
            return base.Channel.GetCharacters(request);
        }
        
        public NeocronWorldMap.Web.NeocronPublicInterface.ExtendedCharacterListResult GetCharacters(System.Guid token, string server) {
            NeocronWorldMap.Web.NeocronPublicInterface.GetCharactersRequest inValue = new NeocronWorldMap.Web.NeocronPublicInterface.GetCharactersRequest();
            inValue.Body = new NeocronWorldMap.Web.NeocronPublicInterface.GetCharactersRequestBody();
            inValue.Body.token = token;
            inValue.Body.server = server;
            NeocronWorldMap.Web.NeocronPublicInterface.GetCharactersResponse retVal = ((NeocronWorldMap.Web.NeocronPublicInterface.PublicInterfaceSoap)(this)).GetCharacters(inValue);
            return retVal.Body.GetCharactersResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NeocronWorldMap.Web.NeocronPublicInterface.GetCharactersResponse> NeocronWorldMap.Web.NeocronPublicInterface.PublicInterfaceSoap.GetCharactersAsync(NeocronWorldMap.Web.NeocronPublicInterface.GetCharactersRequest request) {
            return base.Channel.GetCharactersAsync(request);
        }
        
        public System.Threading.Tasks.Task<NeocronWorldMap.Web.NeocronPublicInterface.GetCharactersResponse> GetCharactersAsync(System.Guid token, string server) {
            NeocronWorldMap.Web.NeocronPublicInterface.GetCharactersRequest inValue = new NeocronWorldMap.Web.NeocronPublicInterface.GetCharactersRequest();
            inValue.Body = new NeocronWorldMap.Web.NeocronPublicInterface.GetCharactersRequestBody();
            inValue.Body.token = token;
            inValue.Body.server = server;
            return ((NeocronWorldMap.Web.NeocronPublicInterface.PublicInterfaceSoap)(this)).GetCharactersAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NeocronWorldMap.Web.NeocronPublicInterface.GetMailsResponse NeocronWorldMap.Web.NeocronPublicInterface.PublicInterfaceSoap.GetMails(NeocronWorldMap.Web.NeocronPublicInterface.GetMailsRequest request) {
            return base.Channel.GetMails(request);
        }
        
        public NeocronWorldMap.Web.NeocronPublicInterface.ExtendedMailListResult GetMails(System.Guid token, string character, string server) {
            NeocronWorldMap.Web.NeocronPublicInterface.GetMailsRequest inValue = new NeocronWorldMap.Web.NeocronPublicInterface.GetMailsRequest();
            inValue.Body = new NeocronWorldMap.Web.NeocronPublicInterface.GetMailsRequestBody();
            inValue.Body.token = token;
            inValue.Body.character = character;
            inValue.Body.server = server;
            NeocronWorldMap.Web.NeocronPublicInterface.GetMailsResponse retVal = ((NeocronWorldMap.Web.NeocronPublicInterface.PublicInterfaceSoap)(this)).GetMails(inValue);
            return retVal.Body.GetMailsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NeocronWorldMap.Web.NeocronPublicInterface.GetMailsResponse> NeocronWorldMap.Web.NeocronPublicInterface.PublicInterfaceSoap.GetMailsAsync(NeocronWorldMap.Web.NeocronPublicInterface.GetMailsRequest request) {
            return base.Channel.GetMailsAsync(request);
        }
        
        public System.Threading.Tasks.Task<NeocronWorldMap.Web.NeocronPublicInterface.GetMailsResponse> GetMailsAsync(System.Guid token, string character, string server) {
            NeocronWorldMap.Web.NeocronPublicInterface.GetMailsRequest inValue = new NeocronWorldMap.Web.NeocronPublicInterface.GetMailsRequest();
            inValue.Body = new NeocronWorldMap.Web.NeocronPublicInterface.GetMailsRequestBody();
            inValue.Body.token = token;
            inValue.Body.character = character;
            inValue.Body.server = server;
            return ((NeocronWorldMap.Web.NeocronPublicInterface.PublicInterfaceSoap)(this)).GetMailsAsync(inValue);
        }
    }
}
